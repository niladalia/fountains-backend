parameters:
  app.api_token: '%env(resolve:APP_API_TOKEN)%'
  app.env: '%env(resolve:APP_ENV)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Command/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Security\ApiKeyAuthenticator:
        arguments:
            $appApiToken: '%app.api_token%'

    App\Shared\Infrastructure\Symfony\ApiExceptionListener:
        arguments:
            $appEnv: '%app.env%'
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\Shared\Infrastructure\Symfony\Validation\EnumValidator:
        tags: ['validator.constraint_validator']

    # FountainRepository service definition
    App\Fountains\Domain\FountainRepository:
        class: App\Fountains\Infrastructure\Persistence\Doctrine\Repository\DoctrineFountainRepository
        arguments:
            $registry: '@doctrine'
        public: false # injectable but not directly accessible in the dependencies container
        shared: true # singleton in the context of a single request (different requests have different instances)
